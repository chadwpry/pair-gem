module Pair
  class Cli
    class Host < self
      def run!
        parse!

        with_valid_config do
          Pair::Session.host(options)
        end
      end

      def with_valid_config
        config = Pair.config

        unless config.api_token
          raise ApiTokenMissingError.new("api-token is required. try --help to understand how")
        end

        unless config.ssh_enabled?
          raise EnableSSHError.new("ssh is not enabled, turn on ssh daemon to continue")
        end

        yield
      end

      def parse!
        opts = parse do |opts|
          opts.banner = "Usage: #{$0.split("/").last} host [-s SESSION_NAME] [-v PAIR[,PAIR[,...]] [-p PAIR[,PAIR[,...]]" +
                        "\n\n" +
                        "At least one PAIR (of any type must be defined). A PAIR takes the form of a Github username." +
                        "\n\n"+
                        "Options:"

          opts.on("-s", "--session-name=SESSION_NAME", "Automatically generated by server if not provided.") do |session_name|
            options[:name] = session_name
          end

          opts.on("-v", "--viewers=PAIRS", Array) do |pairs|
            options[:viewers] = pairs
          end

          opts.on("-p", "--participants=PAIRS", Array) do |pairs|
            options[:participants] = pairs
          end

          opts.on_tail("-h", "--help", "Display this text") do
            puts opts
            exit
          end
        end

        if options[:viewers].to_a.empty? && options[:participants].to_a.empty?
          $stderr.puts "ERROR: At least one PAIR is required...\n\n"
          abort(opts.inspect)
        end
      end
    end
  end
end
